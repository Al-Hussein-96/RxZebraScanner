apply plugin: 'maven-publish'
apply plugin: 'signing'

task androidSourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    if (project.plugins.findPlugin("com.android.library")) {
        // For Android libraries
        from android.sourceSets.main.java.srcDirs
        from android.sourceSets.main.kotlin.srcDirs
    } else {
        // For pure Kotlin libraries, in case you have them
        from sourceSets.main.java.srcDirs
        from sourceSets.main.kotlin.srcDirs
    }
}

artifacts {
    archives androidSourcesJar
}

group = PUBLISH_GROUP_ID
version = PUBLISH_VERSION


//Properties properties = new Properties()
//properties.load(project.rootProject.file('local.properties').newDataInputStream())

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                // The coordinates of the library, being set from variables that
                // we'll set up later
                groupId PUBLISH_GROUP_ID
                artifactId PUBLISH_ARTIFACT_ID
                version PUBLISH_VERSION

                // Two artifacts, the `aar` (or `jar`) and the sources
                if (project.plugins.findPlugin("com.android.library")) {
                    artifact("$buildDir/outputs/aar/${project.getName()}-release.aar")
                } else {
                    artifact("$buildDir/libs/${project.getName()}-${version}.jar")
                }

                artifact androidSourcesJar

                // Mostly self-explanatory metadata
                pom {
                    name = "RxZebraScanner"
                    description = 'Integrate EMDK zebra scanner with reactive programming (RxJava).'
                    url = 'https://github.com/Al-Hussein-96/RxZebraScanner'
                    signing {
                        sign publishing.publications.release
                        sign configurations.archives
                    }
                    licenses {
                        license {
                            name = 'The Apache Software License, Version 2.0'
                            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }
                    developers {
                        developer {
                            id = 'Al-Hussein-96'
                            name = 'Mohammad AlHussain'
                            email = 'm.alhussein.96@gmail.com'
                        }
                    }
                    scm {
                        connection = 'scm:git:github.com/Al-Hussein-96/RxZebraScanner.git'
                        developerConnection = 'scm:git:ssh://github.com/Al-Hussein-96/RxZebraScanner.git'
                        url = 'https://github.com/Al-Hussein-96/RxZebraScanner'
                    }
//                    withXml {
//                        def dependenciesNode = asNode().appendNode('dependencies')
//
//                        project.configurations.implementation.allDependencies.each {
//                            def dependencyNode = dependenciesNode.appendNode('dependency')
//                            dependencyNode.appendNode('groupId', it.group)
//                            dependencyNode.appendNode('artifactId', it.name)
//                            dependencyNode.appendNode('version', it.version)
//                        }
//                    }

                }

            }
        }

//        repositories {
//            maven {
//                name = "sonatype"
//                url = uri("https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/")
//                credentials {
//                    username = properties.getProperty("ossrhUsername")
//                    password = properties.getProperty("ossrhPassword")
//                }
//            }
//        }
    }
}
tasks.withType(Javadoc) {
    enabled = false
}
//signing {
//    useInMemoryPgpKeys(
//            rootProject.ext["signing.keyId"],
//            rootProject.ext["signing.key"],
//            rootProject.ext["signing.password"],
//    )
//    sign publishing.publications
//}